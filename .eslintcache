[{"C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\index.js":"1","C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\App.js":"2","C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\reportWebVitals.js":"3","C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\SeriesRow.js":"4","C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\config.js":"5","C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\serviceWorkerRegistration.js":"6","C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\API.js":"7"},{"size":839,"mtime":1616979403186,"results":"8","hashOfConfig":"9"},{"size":49124,"mtime":1635382422208,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":15671,"mtime":1634048585080,"results":"12","hashOfConfig":"9"},{"size":418,"mtime":1634048374127,"results":"13","hashOfConfig":"9"},{"size":5201,"mtime":1615946806468,"results":"14","hashOfConfig":"9"},{"size":91,"mtime":1634048465542,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"zgidsg",{"filePath":"19","messages":"20","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\index.js",[],["33","34"],"C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\App.js",["35","36","37","38","39","40","41","42","43","44","45"],"C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\reportWebVitals.js",[],"C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\SeriesRow.js",["46","47","48","49","50","51","52","53","54"],"import React from \"react\";\r\nimport Firebase from \"firebase\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { filter } from \"cheerio/lib/api/traversing\";\r\nconst cheerio = require(\"cheerio\");\r\nvar pruefen = \"\";\r\nvar ids = {};\r\nclass SeriesRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loading: false };\r\n    //this.inprogress();\r\n    Firebase.database()\r\n      .ref(\"serien\")\r\n      .on(\"value\", (snap) => {\r\n        snap.forEach(function (child) {\r\n          ids[child.val().title] = child.val().id;\r\n          //console.log(child.val().title+\" : \"+child.val().id);\r\n        });\r\n      });\r\n\r\n    Firebase.database()\r\n      .ref(\"key\")\r\n      .on(\"value\", (snap) => {\r\n        pruefen = snap.val();\r\n      });\r\n    // this.inprogress();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props.serie.poster[\"poster\"]);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    /*  if (this.props !== prevProps) {\r\n      this.inprogress();\r\n    } */\r\n  }\r\n\r\n  /*   async inprogress() {\r\n    this.setState((prevState) => ({\r\n      loading: true,\r\n      production: prevState.production,\r\n      path: prevState.path,\r\n      imdb: prevState.imdb_id,\r\n    }));\r\n    await fetch(\r\n      \"https://api.themoviedb.org/3/tv/\" +\r\n        ids[this.props.serie.title] +\r\n        \"?api_key=\"+ API.TMDB + \"&language=en-US\"\r\n    )\r\n      .then(function (response2) {\r\n        return response2.json();\r\n      })\r\n      .then((data3) => {\r\n        this.setState((prevState) => ({\r\n          loading: prevState.loading,\r\n          production: data3.in_production,\r\n          path: data3.poster_path,\r\n        }));\r\n      })\r\n\r\n      .catch(function (error) {\r\n        console.log(\"Error: \" + error);\r\n      });\r\n\r\n    await fetch(\r\n      \"https://api.themoviedb.org/3/tv/\" +\r\n        ids[this.props.serie.title] +\r\n        \"/external_ids?api_key=\"+ API.TMDB + \"&language=en-US\"\r\n    )\r\n      .then(function (response3) {\r\n        return response3.json();\r\n      })\r\n      .then((data4) => {\r\n        this.setState((prevState) => ({\r\n          loading: false,\r\n          production: prevState.production,\r\n          path: prevState.path,\r\n          imdb: data4.imdb_id,\r\n        }));\r\n\r\n       /*  this.testing(\r\n          \"https://cors.bridged.cc/\" +\r\n            \"https://www.werstreamt.es/filme-serien/?q=\" +\r\n            this.state.imdb +\r\n            \"&action_results=suchen\"\r\n        ); \r\n      })\r\n\r\n      .catch(function (error) {\r\n        console.log(\"Error: \" + error);\r\n      });\r\n  } */\r\n  addZeroes(num) {\r\n    const dec = num.toString().split(\".\")[1];\r\n    const len = dec && dec.length > 2 ? dec.length : 2;\r\n    return Number(num).toFixed(len);\r\n  }\r\n\r\n  round(value, step) {\r\n    step || (step = 1.0);\r\n    var inv = 1.0 / step;\r\n    return Math.round(value * inv) / inv;\r\n  }\r\n\r\n  /* getRawData(URL) {\r\n    return fetch(URL).then((response) =>\r\n      response.text().then((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  async testing(URL) {\r\n    const rawDATA = await this.getRawData(URL);\r\n\r\n    const data = cheerio.load(rawDATA);\r\n    if (data(\"#netflix\").text()) {\r\n      this.setState(() => ({\r\n        netflix: true,\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        netflix: false,\r\n      }));\r\n    }\r\n  } */\r\n\r\n  getRating(a) {\r\n    let punktea = 0;\r\n    if (\r\n      this.props.genre === \"A-Z\" ||\r\n      this.props.genre === \"All\" ||\r\n      this.props.genre === \"Animation\" ||\r\n      this.props.genre === \"Documentary\" ||\r\n      this.props.genre === \"Sport\"\r\n    ) {\r\n      Object.entries(a[\"rating\"]).forEach(([key, value]) => {\r\n        if (a[\"genre\"].includes(key)) {\r\n          punktea += value * 3;\r\n        } else {\r\n          punktea += value;\r\n        }\r\n      });\r\n      punktea /= Object.keys(a[\"genre\"]).length;\r\n      punktea /= 3;\r\n      this.round(punktea, 0, 1);\r\n\r\n      return this.addZeroes(this.round(punktea, 0.01));\r\n    } else {\r\n      punktea += a[\"rating\"][this.props.genre];\r\n\r\n      this.round(punktea, 0, 1);\r\n\r\n      return this.addZeroes(this.round(punktea, 0.01));\r\n    }\r\n  }\r\n\r\n  redirect = (link) => {\r\n    window.open(link);\r\n  };\r\n\r\n  alerte = (e, x) => {\r\n    e.preventDefault();\r\n    console.log(x);\r\n    let test = Firebase.database()\r\n      .ref(\"/serien/\")\r\n      .orderByChild(\"title\")\r\n      .equalTo(x);\r\n    if (!e.target.checked) {\r\n      console.log(\"if\");\r\n      var eingabeKey = prompt(\"Bitte Key eingeben:\");\r\n      if (eingabeKey === pruefen) {\r\n        test\r\n          .once(\"value\")\r\n          .then(function (snapshot) {\r\n            return Object.keys(snapshot.val())[0];\r\n          })\r\n          .then(function (key) {\r\n            let test2 = Firebase.database().ref(\"/serien/\" + key + \"/watching\");\r\n            test2.set(false);\r\n            alert(\"Perfekt\");\r\n          });\r\n      } else {\r\n        alert(\"falscher Key\");\r\n      }\r\n    } else {\r\n      console.log(\"else\");\r\n      eingabeKey = prompt(\"Bitte Key eingeben:\");\r\n      if (eingabeKey === pruefen) {\r\n        test\r\n          .once(\"value\")\r\n          .then(function (snapshot) {\r\n            return Object.keys(snapshot.val())[0];\r\n          })\r\n          .then(function (key) {\r\n            let test2 = Firebase.database().ref(\"/serien/\" + key + \"/watching\");\r\n            test2.set(true);\r\n            alert(\"Perfekt\");\r\n          });\r\n      } else {\r\n        alert(\"falscher Key\");\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var x = false;\r\n    var netflix;\r\n    var prime;\r\n    var poster;\r\n    var wo;\r\n    var imdb;\r\n\r\n    try {\r\n      x = this.props.serie.production[\"production\"];\r\n      netflix = this.props.serie.netflix[\"netflix\"];\r\n      prime = this.props.serie.prime[\"prime\"];\r\n      poster = `url(${this.props.serie.poster[\"poster\"]})`;\r\n      imdb =\r\n        \"https://www.imdb.com/title/\" + this.props.serie.imdb[\"imdb_id\"] + \"/\";\r\n      wo = this.props.serie.wo[\"wo\"];\r\n    } catch (error) {}\r\n\r\n    let testprime;\r\n    let testnetflix;\r\n    if (netflix && !prime) {\r\n      testnetflix = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"57px\",\r\n            height: \"100%\",\r\n            color: \"#292929\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <img\r\n            style={{\r\n              float: \"left\",\r\n              width: \"35.72px\",\r\n              height: \"100%\",\r\n              color: \"#00A8E1\",\r\n              margin: \"auto\",\r\n            }}\r\n            className=\"netflix iconify\"\r\n            src=\"netflix.svg\"\r\n          />\r\n        </span>\r\n      );\r\n      testprime = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"57px\",\r\n            height: \"100%\",\r\n            color: \"#E50914\",\r\n            visibility: \"hidden\",\r\n          }}\r\n          data-icon=\"simple-icons:prime\"\r\n          data-inline=\"false\"\r\n        ></span>\r\n      );\r\n    } else if (!netflix && prime) {\r\n      testnetflix = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"0\",\r\n            height: \"100%\",\r\n            color: \"#E50914\",\r\n            visibility: \"hidden\",\r\n          }}\r\n          data-icon=\"mdi-netflix\"\r\n          data-inline=\"false\"\r\n        ></span>\r\n      );\r\n      testprime = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"114px\",\r\n            height: \"100%\",\r\n            color: \"#292929\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <img\r\n            style={{\r\n              float: \"left\",\r\n              width: \"53.72px\",\r\n              height: \"100%\",\r\n              color: \"#00A8E1\",\r\n              paddingLeft: \"18px\",\r\n            }}\r\n            className=\"netflix iconify\"\r\n            src=\"prime-video.svg\"\r\n          />\r\n        </span>\r\n      );\r\n    } else if (netflix && prime) {\r\n      testnetflix = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"57px\",\r\n            height: \"100%\",\r\n            color: \"#292929\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <img\r\n            style={{\r\n              float: \"left\",\r\n              width: \"35.72px\",\r\n              height: \"100%\",\r\n              color: \"#00A8E1\",\r\n              margin: \"auto\",\r\n            }}\r\n            className=\"netflix iconify\"\r\n            src=\"netflix.svg\"\r\n          />\r\n        </span>\r\n      );\r\n\r\n      testprime = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"57px\",\r\n            height: \"100%\",\r\n            color: \"#292929\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <img\r\n            style={{\r\n              float: \"left\",\r\n              width: \"35.72px\",\r\n              height: \"100%\",\r\n              color: \"#00A8E1\",\r\n            }}\r\n            className=\"netflix iconify\"\r\n            src=\"prime-video.svg\"\r\n          />\r\n        </span>\r\n      );\r\n    } else {\r\n      testnetflix = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"57px\",\r\n            height: \"100%\",\r\n            color: \"#E50914\",\r\n            visibility: \"hidden\",\r\n          }}\r\n          data-icon=\"mdi-netflix\"\r\n          data-inline=\"false\"\r\n        ></span>\r\n      );\r\n\r\n      testprime = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"57px\",\r\n            height: \"100%\",\r\n            color: \"#E50914\",\r\n            visibility: \"hidden\",\r\n          }}\r\n          data-icon=\"simple-icons:prime\"\r\n          data-inline=\"false\"\r\n        ></span>\r\n      );\r\n    }\r\n\r\n    /* if (this.props.serie.prime[\"prime\"]) {\r\n      testprime = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"57px\",\r\n            height: \"100%\",\r\n            color: \"#292929\",\r\n          }}\r\n          data-icon=\"simple-icons:prime\"\r\n          data-inline=\"false\"\r\n        ></span>\r\n      );\r\n    } else {\r\n      testprime = (\r\n        <span\r\n          className=\"netflix iconify\"\r\n          style={{\r\n            float: \"left\",\r\n            width: \"57px\",\r\n            height: \"100%\",\r\n            color: \"#E50914\",\r\n            visibility: \"hidden\",\r\n          }}\r\n          data-icon=\"simple-icons:prime\"\r\n          data-inline=\"false\"\r\n        ></span>\r\n      );\r\n    } */\r\n\r\n    if (!this.state.loading) {\r\n      if (x) {\r\n        return (\r\n          <li>\r\n            <div className=\"polaroid\">\r\n              <p\r\n                className=\"pposter\"\r\n                style={{\r\n                  backgroundImage: poster,\r\n                }}\r\n                onClick={(_) => this.redirect(imdb)}\r\n              >\r\n                <p\r\n                  style={{\r\n                    paddingTop: \"2%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    background: \"none\",\r\n                    width: \"100%\",\r\n                    height: \"12%\",\r\n                  }}\r\n                >\r\n                  {testnetflix}\r\n                  {testprime}\r\n                  <p\r\n                    className=\"rating\"\r\n                    style={{\r\n                      verticalAlign: \"text-bottom\",\r\n                      float: \"left\",\r\n                      width: \"115px\",\r\n                      height: \"auto\",\r\n                    }}\r\n                  >\r\n                    {this.getRating(this.props.serie)} / 10\r\n                  </p>\r\n                </p>\r\n              </p>\r\n\r\n              <p className=\"draußen\" style={{ width: \"100%\" }}>\r\n                <p className=\"padding\">\r\n                  <a\r\n                    href={wo}\r\n                    target=\"_blank\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      display: \"grid\",\r\n                      cursor: \"pointer\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {(() => {\r\n                      if (\r\n                        this.props.filter !== \"\" ||\r\n                        this.props.genre === \"A-Z\"\r\n                      ) {\r\n                        return;\r\n                      } else {\r\n                        return this.props.i + \". \";\r\n                      }\r\n                    })()}\r\n                    {this.props.serie.title}\r\n                  </a>{\" \"}\r\n                </p>\r\n\r\n                <p\r\n                  className=\"progress\"\r\n                  style={{ backgroundColor: \"#42d10f\" }}\r\n                ></p>\r\n              </p>\r\n            </div>\r\n          </li>\r\n        );\r\n      } else {\r\n        return (\r\n          <li>\r\n            <div className=\"polaroid\">\r\n              <p\r\n                className=\"pposter\"\r\n                style={{\r\n                  backgroundImage: poster,\r\n                }}\r\n                onClick={(_) => this.redirect(imdb)}\r\n              >\r\n                {\" \"}\r\n                <p\r\n                  style={{\r\n                    paddingTop: \"2%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    background: \"none\",\r\n                    width: \"100%\",\r\n                    height: \"12%\",\r\n                  }}\r\n                >\r\n                  {testnetflix}\r\n                  {testprime}\r\n                  <p\r\n                    className=\"rating\"\r\n                    style={{\r\n                      verticalAlign: \"text-bottom\",\r\n                      float: \"left\",\r\n                      width: \"115px\",\r\n                      height: \"auto\",\r\n                    }}\r\n                  >\r\n                    {this.getRating(this.props.serie)} / 10\r\n                  </p>\r\n                </p>\r\n              </p>\r\n\r\n              <p className=\"draußen\" style={{ width: \"100%\" }}>\r\n                <p className=\"padding\">\r\n                  <a\r\n                    href={wo}\r\n                    target=\"_blank\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      display: \"grid\",\r\n                      cursor: \"pointer\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {(() => {\r\n                      if (\r\n                        this.props.filter !== \"\" ||\r\n                        this.props.genre === \"A-Z\"\r\n                      ) {\r\n                        return;\r\n                      } else {\r\n                        return this.props.i + \". \";\r\n                      }\r\n                    })()}\r\n                    {this.props.serie.title}\r\n                  </a>{\" \"}\r\n                </p>\r\n\r\n                <p\r\n                  className=\"progress\"\r\n                  style={{ backgroundColor: \"#b103fc\" }}\r\n                ></p>\r\n              </p>\r\n            </div>\r\n          </li>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <li>\r\n          <div className=\"polaroid\">\r\n            <div class=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default SeriesRow;\r\n",["55","56"],"C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\config.js",[],"C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\konra\\Desktop\\Ordner\\Serien-WEB-React\\tv-shows\\src\\API.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":13},{"ruleId":"61","severity":1,"message":"65","line":55,"column":9,"nodeType":"63","messageId":"64","endLine":55,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":94,"column":25,"nodeType":"68","messageId":"69","endLine":94,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":101,"column":32,"nodeType":"68","messageId":"69","endLine":101,"endColumn":34},{"ruleId":"66","severity":1,"message":"67","line":118,"column":25,"nodeType":"68","messageId":"69","endLine":118,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":177,"column":32,"nodeType":"68","messageId":"69","endLine":177,"endColumn":34},{"ruleId":"66","severity":1,"message":"70","line":620,"column":39,"nodeType":"68","messageId":"69","endLine":620,"endColumn":41},{"ruleId":"66","severity":1,"message":"70","line":730,"column":39,"nodeType":"68","messageId":"69","endLine":730,"endColumn":41},{"ruleId":"66","severity":1,"message":"67","line":764,"column":52,"nodeType":"68","messageId":"69","endLine":764,"endColumn":54},{"ruleId":"66","severity":1,"message":"67","line":766,"column":34,"nodeType":"68","messageId":"69","endLine":766,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":770,"column":42,"nodeType":"68","messageId":"69","endLine":770,"endColumn":44},{"ruleId":"61","severity":1,"message":"71","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"61","severity":1,"message":"72","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":16},{"ruleId":"61","severity":1,"message":"73","line":5,"column":7,"nodeType":"63","messageId":"64","endLine":5,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":241,"column":11,"nodeType":"76","endLine":251,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":294,"column":11,"nodeType":"76","endLine":304,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":320,"column":11,"nodeType":"76","endLine":330,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":345,"column":11,"nodeType":"76","endLine":354,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":463,"column":21,"nodeType":"79","endLine":463,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":537,"column":21,"nodeType":"79","endLine":537,"endColumn":36},{"ruleId":"57","replacedBy":"80"},{"ruleId":"59","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'log' is defined but never used.","Identifier","unusedVar","'pruefen' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'red' is defined but never used.","'filter' is defined but never used.","'cheerio' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["82"],["83"],"no-global-assign","no-unsafe-negation"]